#!user/bin/env python3
import subprocess
import tarfile
import argparse
from tqdm import tqdm
import os
"""
commandline program for fetching SRAs from NCBI and compressing them into zip files to be used later
"""

parser = argparse.ArgumentParser(description="Fetchs SRA files from NCBI and stores as zip files for use later")
parser.add_argument("accession_list", help="a list of read accessions of which SRA files can be downloaded from NCBI SRA database")
parser.add_argument("working_dir", help="the working space and output directory")
parser.add_argument("--tmp", help="Can specify the directory for temp files created by fasterq-dump \
                                    (may speed up downloads)")
##define commandline args as variables
args = parser.parse_args()
accession_list_file = args.accession_list
wrkdir = args.working_dir
tmp = args.tmp

#read the list of accessions
accession_list = []
with open(accession_list_file, 'r') as reader:
    for line in reader:
        accession_list.append(line.rstrip())

##set a temp directory
if args.tmp is not None:
    tmpdir = ' -t ' + tmp
    print("set temp dir to: %s" % tmp)
else:
    tmpdir= ''

##count downloads
count = 0
numaccessions = len(accession_list)

##fetch n zip
for accession in tqdm(accession_list):
    os.system('fasterq-dump ' + str(accession) + ' -O ' + wrkdir + tmpdir)
    read1 = os.path.join(wrkdir, accession + "_1.fastq")
    read2 = os.path.join(wrkdir, accession + "_2.fastq")
    if os.path.isfile(read1) and os.path.isfile(read2):
        ##use gnu parallel to speed things up
        os.system('parallel gzip ::: %s*' % accession)
        count = count + 1

print("%d successful downloads out of %d" % (count, numaccessions))